name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  POSTGRES_URL: "postgresql://postgres:password@localhost:5432/watchly"
  POSTGRES_URL_UNPOOLED: "postgresql://postgres:password@localhost:5432/watchly"
  PGHOST: "localhost"
  PGHOST_UNPOOLED: "localhost"
  PGUSER: "postgres"
  PGDATABASE: "watchly"
  PGPASSWORD: "password"
  POSTGRES_URL_NO_SSL: "postgresql://postgres:password@localhost:5432/watchly"
  POSTGRES_PRISMA_URL: "postgresql://postgres:password@localhost:5432/watchly"
  NEXT_PUBLIC_TMDB_API_KEY: "dummy_key"
  NEXT_PUBLIC_TMDB_API_LONGKEY: "dummy_key"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: watchly
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - name: Cache yarn dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Type check
      run: yarn typecheck

    - name: Lint check
      run: yarn lint

    - name: Format check
      run: yarn format:check

    - name: Generate Database Types
      run: yarn db:generate

    - name: Build
      run: yarn build